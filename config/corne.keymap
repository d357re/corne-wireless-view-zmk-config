/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | TAB  |  Q  |  D  |  R  |  W  |  B  |   |  J  |  F   |  U  |  P  |  ;  |  3   |
// | BKSP |  A  |  S  |  H  |  T  |  G  |   |  Y  |  N   |  E  |  O  |  I  |  '   |
// | SHFT |  Z  |  X  |  M  |  C  |  V  |   |  K  |  L   |  ,  |  .  |  /  | CTRL |
//                    | GUI | LWR ESC | ENT |   | SPC | RSE   | ALT |
                        label = "Base";
                        bindings = <
   &kp TAB   &kp Q &kp D &kp R &kp W &kp B   &kp J &kp F  &kp U     &kp P   &kp SEMI &tog 3
   &kp BSPC  &kp A &kp S &kp H &kp T &kp G   &kp Y &kp N  &kp E     &kp O   &kp I    &kp SQT
   &kp LSHFT &kp Z &kp X &kp M &kp C &kp V   &kp K &kp L  &kp COMMA &kp DOT &kp FSLH &kp RCTRL
                  &kp LGUI &lt 1 ESC &kp RET &kp SPACE &lt 2 DEL &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// | GRAVE|  1  |  2  |  3  |  4  |  5  |   |  Z  |  Y  |  X  |  C  |  V  | DEL  |
// | DEL  | UNDO| REDO| CUT | COPY|PASTE|   |     | LFT |  UP | RGT |     |      |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |     |     | DWN |     |     |      |
//                    | CTRL|     | ENT |   | SPC |     | CTRL|
                        label = "Lower";
                        bindings = <
   &kp GRAVE  &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp Z    &kp Y    &kp X    &kp C     &kp V  &kp DEL
   &kp DEL    &kp K_UNDO   &kp K_REDO   &kp K_CUT    &kp K_COPY   &kp K_PASTE    &trans   &kp LEFT &kp UP   &kp RIGHT &trans &trans
   &kp BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &trans   &trans   &kp DOWN &trans    &trans &trans
                          	        &kp LCTRL    &trans   &kp RET      &kp SPACE  &trans   &kp RCTRL
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// | GRAVE|  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | DEL  |  1  |  2  |  3  |  4  |  5  |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// |   .  |  6  |  7  |  8  |  9  |  0  |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | ENT |   | SPC |     | ALT |
                        label = "Raise";
                        bindings = <
   &kp GRAVE  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp DEL    &kp N1   &kp N2 &kp N3   &kp N4   &kp N5      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp KP_DOT &kp N6   &kp N7 &kp N8   &kp N9   &kp N0      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                    	     &kp LGUI  &trans   &kp RET     &kp SPACE  &trans    &kp RALT
                        >;
                };
				
				game_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | DEL  |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | CTRL |
//                    | ALT | LWR ESC | SPC |   | SPC | RSE ENT | 0 |
                        label = "Game";
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RCTRL
                  &kp LALT &lt 1 ESC &kp SPACE &kp SPACE &lt 2 RET &tog 3
                        >;
		};
        };
};
